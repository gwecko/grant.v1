{"version":3,"file":"component---src-pages-index-js-80b1cc4c7c925454e7c5.js","mappings":"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","sources":["webpack://grant.v1/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://grant.v1/./node_modules/@babel/runtime/helpers/construct.js","webpack://grant.v1/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://grant.v1/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://grant.v1/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://grant.v1/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://grant.v1/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack://grant.v1/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://grant.v1/./node_modules/camelcase/index.js","webpack://grant.v1/./gatsby-config.js","webpack://grant.v1/../src/image-utils.ts","webpack://grant.v1/../src/components/hooks.ts","webpack://grant.v1/../src/components/picture.tsx","webpack://grant.v1/../src/components/layout-wrapper.tsx","webpack://grant.v1/../src/components/placeholder.tsx","webpack://grant.v1/../src/components/main-image.tsx","webpack://grant.v1/../src/components/gatsby-image.browser.tsx","webpack://grant.v1/../src/components/gatsby-image.server.tsx","webpack://grant.v1/../src/components/static-image.server.tsx","webpack://grant.v1/../src/components/static-image.tsx","webpack://grant.v1/./node_modules/gatsby-plugin-mdx/index.js","webpack://grant.v1/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://grant.v1/./src/config.js","webpack://grant.v1/./src/components/navbar.js","webpack://grant.v1/./src/components/icons/external.js","webpack://grant.v1/./src/components/icons/github.js","webpack://grant.v1/./src/components/icons/linkedIn.js","webpack://grant.v1/./src/components/icons/plane.js","webpack://grant.v1/./src/components/icons/icons.js","webpack://grant.v1/./src/components/sideLinks.js","webpack://grant.v1/./src/components/layout.js","webpack://grant.v1/./src/components/sections/greeting.js","webpack://grant.v1/./src/components/sections/about.js","webpack://grant.v1/./src/components/sections/projects.js","webpack://grant.v1/./src/components/sections/contact.js","webpack://grant.v1/./src/pages/index.js"],"sourcesContent":["var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n\n  return string;\n};\n\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  var hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\n\nmodule.exports = camelCase; // TODO: Remove this for the next major release\n\nmodule.exports.default = camelCase;","const config = require('./src/config')\n\nmodule.exports = {\n  siteMetadata: {\n    title: ` <Grant Wecker/>`,\n    siteUrl: `https://grantwecker.com`,\n    description: `Grant Wecker is a software developer currently focusing on web applications.`,\n    image: '/preview.png',\n    icon: '/retro_icon.png'\n  },\n  \n  trailingSlash: `never`,\n  \n  plugins: [\n    \"gatsby-plugin-image\",\n    \"gatsby-plugin-mdx\",\n    \"gatsby-plugin-sharp\",\n    \"gatsby-plugin-gatsby-cloud\",\n    \"gatsby-transformer-sharp\",\n    \"gatsby-plugin-robots-txt\",\n    {\n      resolve: \"gatsby-plugin-manifest\",\n      options: {\n        name: 'GrantWecker',\n        short_name: 'GrantWecker',\n        start_url: '/',\n        background_color: config.colors.darkGreen,\n        theme_color: config.colors.white,\n        display: 'minimal-ui',\n        icon: 'src/images/retro_icon.png',\n      }\n    },\n    {\n      resolve: `gatsby-plugin-styled-components`,\n      options: {\n        displayName: \"true\",\n      },\n    },\n    {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        name: \"pages\",\n        path: \"./src/pages/\"\n      },\n      __key: \"pages\"\n    },\n    {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        name: 'projects', \n        path: `${__dirname}/projects/`\n      }\n    },\n  ]\n};","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        document.addEventListener(`load`, function onLoadListener() {\n          document.removeEventListener(`load`, onLoadListener)\n\n          onStartLoad?.({\n            wasCached: true,\n          })\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","module.exports = {\n    email: 'grantwecker@live.com',\n    \n    socialMedia: [\n        {\n            name: 'github',\n            url: 'https://github.com/gwecko'\n        },\n        {\n            name: 'linkedIn',\n            url: 'https://www.linkedin.com/in/grant-wecker'\n        }\n    ],\n    \n    colors: {\n        darkGreen: '#172B0A',  // (23, 43, 10)\n        green: '#485632',  // (72, 86, 50)\n        white: '#F0EBE0',  // (240, 235, 224)\n        red: '#DA465C'  // (218, 70, 92)\n    },\n    \n    navbarLinks: [\n        {\n            name: 'About',\n            url: '/#about'\n        },\n        {\n            name: 'Projects',\n            url: '/#projects'\n        },\n        {\n            name: 'Contact',\n            url: '/#contact'\n        }\n    ]\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport { navbarLinks } from \"../config\";\n// import { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\n\nconst StyledNavbar = styled.nav`\n\ndisplay: flex;\nposition: fixed;\ntop: 0;\nwidth: 100%;\nheight: 70px;\nbackground: (rgba(23,43,10, .9));\nbackdrop-filter: blur(30px);\n-webkit-backdrop-filter: blur(30px);\nfont-size: .9em;\nz-index: 5;\n\n\n// fadedown\n    .fadedown-enter {\n        opacity: 0.01;\n        transform: translateY(-20px);\n        transition: opacity 300ms var(--easing), transform 300ms var(--easing);\n    }\n    \n    .fadedown-enter-active {\n        opacity: 1;\n        transform: translateY(0px);\n        transition: opacity 300ms var(--easing), transform 300ms var(--easing);\n    }\n\n\nul{\n    list-style: none;\n    margin-left: auto;\n    padding-top: 25px;\n    margin-bottom: 50px;\n}\n\nli{\n    display: inline-block;\n    margin: 0px 35px 0px 0px;\n    @media (max-width: 480px){\n        margin: 0px 10px 0px 0px;\n    }\n}\n\na{\n    color: var(--white);\n    display: block;\n}\n\n.underline-anim{\n    display: inline-block;\n    position: relative;\n}\n\n.underline-anim:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 3px;\n    bottom: 0;\n    left: 0;\n    background-color: var(--red);\n    transform-origin: bottom left;\n    transition: transform 0.15s ease-out;\n}\n\n.underline-anim:hover:after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n}\n\n.hide-mobile{\n    @media screen and (max-width: 600px){\n        display: none;\n    }\n}\n\n.resume-link{\n    display: inline;\n    padding: 8px;\n    border: solid 2px rgba(218, 70, 92, .8);\n    border-radius: 5px;\n    color: var(--white);\n    background: rgba(218, 70, 92, .3);\n    &:hover{\n        background: rgba(218, 70, 92, .6);\n        color: var(--white);\n        transition: 0.15s ease-in-out;\n    } \n}\n\nspan{\n    font-size: 3rem;\n    margin-left: calc(1% + 10px);\n    filter: sepia(1%)  hue-rotate(85deg) saturate(130%);\n}\n`;\n\n\nconst Navbar = () => {\n    return (\n        <StyledNavbar>\n            {/* This is the retro game emoji */}\n            <span>&#x1F47E;</span>\n            <ul>\n                {navbarLinks.map((link, i) => (\n                    <li key={i}>\n                        <Link to={link.url} className='underline-anim hide-mobile'>\n                            {link.name}</Link>\n                    </li>\n                ))}\n                <li><a href=\"/resume.pdf\" className=\"resume-link\">Resume</a>\n                </li>\n            </ul>\n        </StyledNavbar>\n    )\n}\n\nexport default Navbar;","import React from 'react';\n\nconst IconExternal = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        role=\"img\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"feather feather-external-link\">\n        <title>External Link</title>\n        <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\n        <polyline points=\"15 3 21 3 21 9\"></polyline>\n        <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\n    </svg>\n);\n\nexport default IconExternal;\n","import React from 'react';\n\nconst IconGitHub = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        role=\"img\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"feather feather-github\">\n        <title>GitHub</title>\n        <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>\n    </svg>\n);\n\nexport default IconGitHub;\n\n\n","import React from 'react';\n\nconst IconLinkedIn = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        role=\"img\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"feather feather-linkedin\">\n        <title>LinkedIn</title>\n        <path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"></path>\n        <rect x=\"2\" y=\"9\" width=\"4\" height=\"12\"></rect>\n        <circle cx=\"4\" cy=\"4\" r=\"2\"></circle>\n    </svg>\n);\n\nexport default IconLinkedIn;\n","import React from \"react\";\n\nconst IconPlane = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        className=\"feather feather-github\">\n        <title>Send</title>\n        <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\" />\n        <polygon points=\"22 2 15 22 11 13 2 9 22 2\" />\n    </svg >\n)\n\nexport default IconPlane;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n        IconGithub,\n        IconLinkedIn,\n        IconExternal,\n        IconPlane\n    } from '.';\n\nconst Icon = ({ name }) => {\n    switch (name) {\n        case 'external':\n            return <IconExternal />;\n        case 'github':\n            return <IconGithub />;\n        case 'linkedIn':\n            return <IconLinkedIn />;\n        case 'plane':\n            return <IconPlane />;\n        default:\n            return <IconExternal />;\n    }\n}\n\nIcon.propTypes = {\n    name: PropTypes.string.isRequired,\n}\n\nexport default Icon;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { email, socialMedia } from \"../config\";\nimport { Icon } from './icons';\n\nconst StyledSideLinks = styled.footer`\n    position: fixed;\n    bottom: 0;\n    @media (max-width: 600px){\n        display: none\n    }\n    @media (max-height: 480px){\n        display: none\n    }\n`;\n\nconst StyledSocialsLine = styled.div`\n    margin-left: 3rem;\n    filter: var(--dropShadow);\n    \n    @media (max-width: 600px){\n        padding-left: 2rem;\n    }\n\n    ul{\n      list-style: none;\n      padding-left: 0;\n      margin: 0;\n    }\n\n    li{\n      padding-top: 10px;\n    }\n\n    a{\n        svg{\n            height: 30px;\n            &:hover{\n                transform: translateY(-3px);\n                color: var(--white);\n            }   \n        }\n    }\n    \n    ::after{\n      content: \"\";\n      display: block;\n      width: 2px;\n      height: calc(10vh + 50px);\n      margin: 0 auto;\n      background-color: var(--green);\n      filter: drop-shadow(0px -3px 7px var(--darkGreen));\n    }\n`;\n\nconst StyledEmailLine = styled.div`\n    display: block;\n    position: fixed;\n    bottom: 0px;\n    right: 4rem;\n    filter: var(--dropShadow);\n\n    a{\n        writing-mode: vertical-lr;\n        letter-spacing: 0.09rem;\n        font-size: 1.05rem;\n        &:hover{\n            transform: translateY(-3px);\n            color: var(--white);\n        }\n    }\n    \n    ::after{\n        content: '';\n        display: block;\n        width: 3px;\n        margin-left: .6rem ;\n        height: calc(10vh + 50px);\n        background-color: var(--green);\n    }\n`\n\n\nconst SideLinks = () => {\n    \n    const socialsLine = (\n        <ul>\n            {socialMedia && socialMedia.map((socialMedia, i) => (\n                <li key={i}>\n                    <a href={socialMedia.url}\n                        aria-label={socialMedia.name}>\n                        <Icon name={socialMedia.name} />\n                    </a>\n                </li>\n            ))}\n        </ul>\n    );\n    \n    const emailLine = (\n        <a href={`mailto:${email}`}>{email}</a>\n    );\n    \n    return (\n        <StyledSideLinks>\n            <StyledSocialsLine>{socialsLine}</StyledSocialsLine>\n            <StyledEmailLine>{emailLine}</StyledEmailLine>\n        </StyledSideLinks>\n    )\n}\n\nexport default SideLinks;","import * as React from 'react';\nimport Navbar from './navbar';\nimport { createGlobalStyle } from 'styled-components';\nimport SideLinks from './sideLinks';\n\n\nconst GlobalStyle = createGlobalStyle`\n  :root{\n    --darkGreen: #172B0A;\n    --green: #485632;\n    --gray: #8E99A6;\n    --white: #F0EBE0;\n    --red: #DA465C;\n    --dropShadow: drop-shadow(0px -3px 7px var(--darkGreen));\n  }\n\n  /* Scrollbar configuration */\n  *::-webkit-scrollbar {\n      width: 14px;\n      @media (max-width: 480px){\n        width: 0px;\n    }\n  }\n  *::-webkit-scrollbar-track {\n      background: var(--green);\n  }\n  *::-webkit-scrollbar-thumb {\n      background-color: var(--darkGreen);\n      border-radius: 8px;\n      border: 2px solid var(--green);\n  }\n  /* END: Scrollbar configuration */\n\n  *{\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: 0;\n  }\n\n  html{\n      min-height: -webkit-fill-available;\n      height: 100%;\n      min-width: 100%;\n      scroll-behavior: smooth;\n      box-sizing: border-box;\n      background: var(--darkGreen);\n  }\n\n  body{\n    margin-top: 0px;\n    width: 100%;\n    height: 100%;\n    color: var(--white);\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    line-height: 1.5;\n    background: var(--darkGreen);\n    background-size: cover;\n    -webkit-background-size: cover;\n    @media (max-width: @iphone-screen) {\n      background-attachment: scroll;\n    }\n  }\n\n  main{\n      padding: 100px 20%;\n      overflow-x: hidden;\n      background: linear-gradient(0deg, rgba(23,43,10,1) 0%, rgba(72,86,50,1) 40%, rgba(23,43,10,1) 100%);\n      @media screen and (max-width: 480px) {\n        padding: 5%;\n      }\n  }\n\n  section:first-of-type{\n      border: none;\n      margin-top: 25vh;\n      margin-bottom: 50vh;\n  }\n\n  section {\n      margin: 20vw auto;\n      padding: 0px 0px 0px 10px;\n      // This is so the navbar won't cut off the section\n      scroll-margin-top: 10vh;\n  }\n\n  p{\n      margin: 20px 0 0;\n  }\n\n\n  a{\n      color: var(--red);\n      text-decoration: none;\n  }\n\n  h2{\n    font-size: 2.5em;\n    width: max-content;\n  }\n\n  // little green decorative line\n  h2::after{\n    content: '';\n    display: inline-block;\n    position: relative;\n    top: -8px;\n    width: 300px;\n    height: 2px;\n    margin-left: 20px;\n    background-color: var(--white);\n    @media (max-width: 800px){\n      display: none;\n    }\n  }\n\n  h2:not(:first-child)::after{\n    content: none;\n  }\n`;\n\n\nconst Layout = ({ children }) => {\n  \n  return (\n    <>\n      <div id='root'>\n        <GlobalStyle />\n        <Navbar />\n        <main>\n          {children}\n        </main>\n        <SideLinks />\n      </div>\n    </>\n  );\n}\n\nexport default Layout;","import React from 'react';\nimport styled from 'styled-components';\nimport { socialMedia } from '../../config';\nimport { Icon } from '../icons';\n\n\nconst StyledGreeting = styled.section`\nh1, h2, h3, h4, h5, h6{\n    margin: 0;\n    line-height: 1.2;\n}\n\nh1{\n    font-size: medium;\n    color: var(--white);\n}\n\nh2{\n    font-size: clamp(40px, 8vw, 80px);\n    color: var(--white);\n    @media (max-width: 480px){\n        font-size: 30px;\n    }\n}\n\nh3{\n    font-size: clamp(30px, 5vw, 50px);\n    color: var(--green);\n    text-shadow: 15px 0px 30px var(--darkGreen);\n    @media (max-width: 480px){\n        font-size: 25px;\n    }\n}\n`;\n\nconst StyledGreetingLinks = styled.div`\n    @media (min-width: 600px){\n        display: none;\n    }\n    text-align: center;\n    padding-top: 80px;\n    \n\n    ul{\n      list-style: none;\n      display: inline-flex;\n    }\n\n    a{\n        padding: 2vw;\n        height: 50px;\n        width: 50px;\n        color: var(--red);\n        &:active,\n        &:hover{\n            color: var(--white);\n            transition: .2s;\n        }\n        svg{\n            width: clamp(40px, 40px, 50px);\n            height: clamp(40px, 40px, 50px);\n        }\n    }\n`;\n\nconst GreetingSection = () => {\n    \n    const greetingLinks = (\n        <ul>\n            {socialMedia.map((socialMedia, i) => (\n                <li key={i}>\n                    <a href={socialMedia.url}\n                        aria-label={socialMedia.name}>\n                        <Icon name={socialMedia.name} />\n                    </a>\n                </li>\n            ))}\n        </ul>\n    );\n    \n    return (\n        <StyledGreeting>\n            <h1>Welcome! I'm</h1>\n            <h2>Grant Wecker.</h2>\n            <h3>This is my portfolio.</h3>\n            <StyledGreetingLinks>{greetingLinks}</StyledGreetingLinks>\n        </StyledGreeting>\n    )\n};\n\nexport default GreetingSection;","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n\n\nconst StyledAbout = styled.section`\n    h2{\n        margin-top: 80px;\n    }\n    \n    h3{\n        padding: 10px 0;\n        margin-top: 30px;\n        font-size: 1.5rem;\n        display: inline-flex;\n        transition: color .2s;\n        &:hover{\n            cursor: pointer;\n            color: var(--red);\n            transition: color 0s;\n        }\n    }\n\n    button{\n        background: none;\n        color: var(--white);\n        font-size: initial;\n        font-family: inherit;\n        text-align: inherit;\n    }\n\n    span{\n        display: inline-flex;\n        color: var(--red);\n        height: min-content;\n        margin-right: 10px;\n        transition: .2s ease-out;\n    }\n\n    .rotate{\n        transform: rotate(90deg);\n        -webkit-transform: rotate(90deg);\n        transition: .2s;\n    }\n\n    p{\n        padding: 0;\n        margin: 0;\n        display: block;\n    }\n\n    mark{\n        color: inherit;\n        background-color: var(--darkGreen);\n    }\n\n    .show-answer{\n        margin: 10px 0px 0px 0px;\n        padding: 0px 0px 0px 10px;\n        border-left: 3px solid var(--green);\n        // 'max-height' must be in pixels; otherwise it stops being animated.\n        // the <div> will not exceed the its needed height, meaning it\n        // won't actually be 1000px or whatever we set it to.\n        max-height: 1000px; \n        transition: max-height 0.3s cubic-bezier(0.33, 0, 0.68, 0);\n        overflow: hidden;\n        position: relative;\n    }\n    \n    .hide-answer{\n        margin: 10px 0px 0px 0px;\n        padding: 0px 0px 0px 10px;\n        border-left: 3px solid var(--green);\n        max-height: 0;\n        transition: max-height 0.3s cubic-bezier(0, 0.55, 0.45, 1);\n        overflow: hidden;\n        position: relative;\n    }\n\n    h4{\n        padding-bottom: 15px;\n        font-size: 1.1rem;\n    }\n\n    @media screen and (max-width: 768px) {\n            padding: 10px;\n    }\n\n    #line-through{\n        text-decoration: line-through;\n        color: var(--white);\n    }\n`\n\nconst AboutSection = () => {\n    \n    /* \n        array of question & answer objects\n        the 'hidden' property is necessary for the collapse feature\n    */\n    const questionsAndAnswers = [\n        {\n            question: \"Who is Grant?\",\n            answer: \"Web developer, self-taught on top of academic CS foundation.\",\n            answer_ext: <p>I graduated from <mark>The Ohio State University</mark> with a degree in \n                Communication Technology and a minor in Computer Science.\n                <br /><br />\n                I've since taught myself the ins and outs of web development, <mark>mostly \n                    through project-based learing</mark>, Udemy, seeing what others do, and browsing documentation.\n                </p>,\n            hidden: true\n        },\n        {\n            question: \"What motivates Grant?\",\n            answer: \"An obsession in website design and digital experiences.\",\n            answer_ext: <p>I had <mark>zero coding experience</mark> going into college.\n                <br/><br/>\n                After my intro \n                to C++ class, things fell apart. During my software 1 class, my \n                laptop had to be sent away for repairs and I didn't seek the help I \n                needed. One of the few times I went to seek help, I accidentally\n                knocked over a shelf of my professor's office. And I finished that \n                course <mark>with an F</mark>.\n                <br/><br/>\n                But I <mark>loved to learn how</mark> the systems we\n                use function, and I wanted to <mark>create my own pieces of software</mark>. So\n                here I am.\n                <br/><br/>\n                And I haven't knocked over any shelves since.\n                </p>,\n            hidden: true\n        },\n        {\n            question: \"What technologies does he use to create?\",\n            answer: \"Most recently Javascript, React, Gatsby, node.js, and Express\",\n            answer_ext: <p>In my <a href='/#projects'>Projects</a> section I list the integral tech for each project. \n                I liked the <mark>JS-React-Gatsby-GraphQL</mark> stack used to build this site so I'm\n                going to continue with those for now.\n                <br/><br/>\n                However, if I see a website or app I really like, \n                I may find out what makes it spin and learn that in order to make my own version.\n                <br/><br/>\n                In an academic setting, I've worked with <mark> Java, C, and briefly Python</mark>. Experienced with HTML/CSS.\n                </p>,\n            hidden: true\n        },\n        {\n            question: \"What are his professional goals?\",\n            answer: \"Develop alongside a group of individuals with experience greater than my own to create impactful software.\",\n            answer_ext: <p>I understand the value of <mark>collaboration for solutions and creativity</mark>.\n                <br /><br />\n                At one of the coffee places I frequent, the barista is also learning web\n                development. Going there, I can look forward to discussing with <a href='https://www.alexisquintuna.com'>Alex Quintuna</a> what we've been working on and\n                finding solutions. Even with different backgrounds, we have similar interests. Wherever I work, I would like to find more of that collaboration.\n                <br /><br />\n                I want to do <mark>5x what I'm able to now in a fraction of the time</mark>.\n                </p>,\n            hidden: true\n        },\n        {\n            question: \"Tell me more about Grant!\",\n            answer: <p>Ohio native who grew up in a big family with lots of animals.</p>,\n            answer_ext: <p><mark>As a kid I dreamt of\n                being an architect</mark>—teachers would take polaroids of the many designs of wood block structures I built\n                in preschool. That career interest went away, but has <mark>resurfaced in the appreciation\n                    for design of digital experiences.</mark> <br /><br />One of my favorite things to do is <mark>ask for feedback</mark> on\n                my projects, like when my uncle said a (finished) version of this site was \"bland\". He was right! <mark>And I'm working to make it less bland.</mark>\n                <br /><br /> Beyond that, I love to ride and travel on my motorcycle, sweat in the gym,\n                and spend time behind the bar providing others with a good time.\n                </p>,\n            hidden: true\n        },\n    ]\n    \n    // stores whole array as a state (which can be updated)\n    const [qaList, setqaList] = useState(questionsAndAnswers);\n    \n    /* \n        The lesson I learned here is that the page is rendered\n        once upon load, and only things which are 'stateful'—\n        meaning they implement the 'useState' hook, are\n        re-rendered. I had a \"working\" solution for a while\n        because the console.log would show updated info, but\n        the page wouldn't display it. It wasn't until I set\n        the 'className' ternary operator to the 'stateful' \n        variable that I got a TRUE working solution.\n        \n        This function re-renders the whole array. I couldn't\n        find a better solution and the most helpful posting\n        suggested that this is the proper way to do it.\n    \n        What's going on:\n        1. takes 'key' from corresponding button\n        2. maps through whole array, if they key matches index,\n           then that item is updated\n        3. updates the state of the array, which is re-rendered\n    */\n    function handleClick(key) {\n        const newqaList = qaList.map((singleQuestion, i) => {\n            if (key === i) {\n                const updatedQuestion = {\n                    ...singleQuestion,\n                    hidden: !singleQuestion.hidden,\n                }\n                return updatedQuestion;\n            }\n            return singleQuestion;\n        });\n        setqaList(newqaList);\n    }\n    \n    function handleMouseEnter(key) {\n        qaList[key].hidden = true;\n        handleClick(key);\n    }\n    \n    // dynamic question & answer list\n    const displayedQAList = qaList.map((qAndA, i) => {\n        return (\n            <div>\n                {/* the question; clicked to show collapsable answer */}\n                <button\n                    key={i}\n                    onClick={() => handleClick(i)}\n                    onKeyDown={() => handleClick(i)}\n                    onMouseEnter={() => handleMouseEnter(i)}\n                >\n                    <h3>\n                        <span className={qaList[i].hidden ? '' : 'rotate'}>&gt; </span>\n                        {qAndA.question}\n                    </h3>\n                </button>\n                \n                {/* ~~collapses~~ */}\n                <div\n                    key={i}\n                    className={qaList[i].hidden ? 'hide-answer' : 'show-answer'}>\n                    {/* short answer */}\n                    <h4>{qAndA.answer}</h4>\n                    {/* extended answer */}\n                    <p>{qAndA.answer_ext}</p>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <StyledAbout id='about'>\n            <h2>About me</h2>\n            {displayedQAList}   \n        </StyledAbout>\n    )\n};\n\nexport default AboutSection;","import React from 'react';\nimport { useState } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport styled from 'styled-components';\nimport { getImage, GatsbyImage } from 'gatsby-plugin-image';\nimport { Icon } from '../icons';\n\n\nconst StyledProjects = styled.section`\n  h2{\n    padding-bottom: 30px;\n  }\n  \n  .container{\n    display: flex;\n\n    @media (max-width: 768px){\n      display: block;\n    }\n    @media (max-width: 480px){\n      width: 90vw;\n    }\n  }\n\n`;\n\nconst StyledProjectList = styled.div`\n    \n  width: max-content;\n\n  ul{\n    list-style: none;\n    padding: 0;\n  }\n\n  li{\n    width: max-content;\n    padding-left: 10px;\n    margin: 0px 30px 20px 10px;\n    display: block;\n    transition: .2s;\n    &:hover{\n      color: var(--red);\n      transition: .1s;\n    }\n  }\n\n  button{\n    background: none;\n    color: var(--white);\n    font-size: initial;\n    font-family: inherit;\n    cursor: pointer;\n  }\n\n  .highlight{\n    transition: .2s;\n    padding: 0 auto;\n    border-left: 3px solid var(--red);\n    color: var(--white);\n  }\n`;\n\nconst StyledProjectCard = styled.div`\n  .card{\n    background: rgba(142, 153, 166, .07);\n    /* top-right-bottom-left */\n    padding: 25px 35px 40px 35px;\n    border-radius: 5px;\n    margin-top: 0;\n    margin-bottom: 60px;\n    border-left: 5px solid var(--red);\n    @media (max-width: 480px) { \n      border: none;\n      background: linear-gradient(to left, rgba(142, 153, 166, .1), rgba(23, 43, 10, .4));\n    }\n  }\n\n  // project name & links\n  .card-top{\n    display: flex;\n  }\n\n  h3{\n    margin-right: 0px;\n    @media (max-width: 480px) {\n      margin-right: auto;\n    }\n  }\n\n  ul{\n    display: inline-flex;\n    list-style: none;\n    padding: 0;\n    margin-left: auto;\n    @media (max-width: 480px) {\n      display: flex;\n    }\n  }\n\n  li{\n    margin: 0 10px;\n    @media (max-width: 600px){\n      margin: 0 0 0 10px;\n    }\n  }\n\n  a{\n    display: block;\n    transition: .2s;\n    svg{\n      width: 1.7rem;\n      stroke-width: 2;\n    }\n    &:hover{\n      color: var(--white);\n      transition: .1s;\n    }\n    &:active{\n      svg{\n        fill: var(--white);\n      }\n    }\n  }\n\n  .img{\n    filter: drop-shadow(5px 5px 10px var(--darkGreen));\n    transition: .2s;\n\n    &:hover{\n      transform: translate(-1px, -2px);\n      transition: .1s ease-in;\n    }\n  }\n\n`;\n\n\nconst ProjectsSection = () => {\n  \n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allMdx(sort: {fields: frontmatter___position}) {\n        nodes {\n          body\n          frontmatter {\n            name\n            repo\n            technologies\n            url\n            image {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }`\n  );\n  \n  const [activeTabId, setActiveTabId] = useState(0);\n  \n  // gather project names for side list\n  const projectListArray = [];\n  data.allMdx.nodes.map((node) => {\n    return(projectListArray.push(node.frontmatter.name))\n  });\n  \n  // project selection side list\n  const projectList = (\n    <div>\n      <ul>\n        {\n          projectListArray.map((name, i) => (\n            <li className={(i === activeTabId) ? 'highlight' : ''}>\n              <button\n                key={i}\n                onClick={() => setActiveTabId(i)}\n                onKeyDown={() => setActiveTabId(i)}>\n                <h3>{name}</h3>\n              </button>\n            </li>\n          ))\n        }     \n      </ul>\n    </div>\n  );\n  \n  \n  // make a card for each project\n  const projectCard = data.allMdx.nodes.map((node, i) => {\n    const image = getImage(node.frontmatter.image);\n    const { name, repo, url } = node.frontmatter;\n    \n    return (\n      <div className='card'\n        key={i}\n        hidden={activeTabId !== i}>\n        <div className='card-top'>\n          <h3 id=\"title\">{name}</h3>\n          <ul>\n            <li>\n              <a href={repo}\n                target=\"_blank\" rel=\"noreferrer noopener\"\n                aria-label={`${name} github`}>\n                <Icon name='github' /></a></li>\n            <li>\n              <a href={node.frontmatter.url}\n                target=\"_blank\" rel=\"noreferrer noopener\"\n                aria-label={`${node.frontmatter.name} external`}>\n                <Icon name='external' /></a></li>\n          </ul>\n        </div>\n        <div className='card-body'>\n          <h4><i>{node.frontmatter.technologies}</i></h4>\n          <MDXRenderer>{node.body}</MDXRenderer>\n        </div>\n        <div className='img'>\n          <br />\n          <a href={url}\n            target=\"_blank\" rel=\"noreferrer noopener\">\n            <GatsbyImage image={image} alt={name} />\n          </a>\n        </div>\n      </div>\n    )\n  });\n  \n  \n  return (\n    <StyledProjects id='projects'>\n      <h2>Projects</h2>\n      <div className='container'>\n          <StyledProjectList>{projectList}</StyledProjectList>\n          <StyledProjectCard>{projectCard}</StyledProjectCard>\n      </div>\n    </StyledProjects>\n  )\n};\n\n\nexport default ProjectsSection;","import React from 'react';\nimport styled from 'styled-components';\nimport { email } from '../../config.js';\nimport { Icon } from '../icons';\n\nconst StyledContact = styled.section`\n    \n    .container{\n        display: flex;\n        align-items: center;\n        padding-top: 30px;\n        @media screen and (max-width: 600px){\n            display: block;\n            text-align: center;\n            > button{\n                margin: 20px 20px;\n            }\n        }\n    }\n\n    p{\n        max-width: 500px;\n        margin: 0 auto;\n\n    }\n\n    button{\n        margin: 0px auto;\n        padding: 0px 40px 0px 20px;\n        background: rgba(0,0,0,0);\n        border: none;\n    }\n\n    .email-link{\n        display: block;\n        width: max-content;\n        font-size: 1.6em;\n        padding: 20px 25px 20px 25px;\n        border: solid 3px rgba(218, 70, 92, .8);\n        border-radius: 12px;\n        color: var(--white);\n        background: rgba(218, 70, 92, .3);\n        &:hover{\n            background: rgba(218, 70, 92, .6);\n            transition: 0.15s ease-out;\n        }\n    }\n\n    .resume-link{\n        display: inline-block;\n    }\n`;\n\n\nconst ContactSection = () => {\n    return (\n        <StyledContact id='contact'>\n            <h2>Contact</h2>\n            <div className='container'>\n                <p>If you care to share any opportunities or ideas, then I care to hear them! Or just say hi, I'd be happy to hear from you.</p>\n                <button>\n                    <a className=\"email-link\" href={`mailto:${email}`}>\n                        Say hello <Icon name='plane' /></a>\n                </button>\n            </div>\n        </StyledContact>\n    )\n};\n\nexport default ContactSection;","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport GreetingSection from \"../components/sections/greeting\";\nimport AboutSection from \"../components/sections/about\";\nimport ProjectsSection from \"../components/sections/projects\";\nimport ContactSection from \"../components/sections/contact\";\nimport { siteMetadata } from \"../../gatsby-config\";\n\n\n\nconst IndexPage = () => {\n  return (\n    <>\n      <Layout>\n        <GreetingSection />\n        <ProjectsSection />\n        <AboutSection />\n        <ContactSection />\n      </Layout>\n    </>\n  );\n};\nexport default IndexPage;\n\n\n// Gatsby Head API -- must be defined in page, not a component\nexport const Head = () => {\n\n  const { title, description, image, siteUrl, icon } = siteMetadata;\n  return (\n    <>\n      <meta http-equiv=\"content-language\" content=\"en-us\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, viewport-fit=cover\" /> \n      <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />\n      \n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <meta name=\"icon\" content={icon} />\n\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:url\" content={siteUrl} />\n      <meta property=\"og:type\" content=\"website\" />\n    </>\n  )\n}\n"],"names":["arrayLikeToArray","module","exports","arr","Array","isArray","__esModule","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","bind","a","push","apply","instance","Function","prototype","arguments","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","source","excluded","i","target","sourceKeys","keys","length","indexOf","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","camelCase","input","options","assign","pascalCase","x","map","trim","filter","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","config","require","siteMetadata","title","siteUrl","description","image","icon","trailingSlash","plugins","resolve","name","short_name","start_url","background_color","colors","darkGreen","theme_color","white","display","displayName","path","__key","__dirname","height","node","images","_node$images","fallback","_node$images$fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","_node$childImageSharp","format","isLoading","isLoaded","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","fallbackImage","paddingTop","maxWidth","React","alt","role","children","props","Fragment","Sizer","q","H","P","srcSet","decoding","undefined","t","sizes","Image","media","type","propTypes","PropTypes","Picture","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","altValidator","Set","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","document","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","memo","warn","GatsbyImageHydrator","GatsbyImage","se","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","MDXRenderer","mdx","useMDXScope","scope","mdxScope","End","fullScope","values","fn","createElement","email","socialMedia","url","green","red","navbarLinks","StyledNavbar","styled","link","Link","to","href","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","y","cx","cy","r","StyledSideLinks","StyledSocialsLine","StyledEmailLine","socialsLine","emailLine","GlobalStyle","createGlobalStyle","id","StyledGreeting","StyledGreetingLinks","greetingLinks","StyledAbout","questionsAndAnswers","question","answer","answer_ext","hidden","useState","qaList","setqaList","handleClick","newqaList","singleQuestion","displayedQAList","qAndA","onClick","onKeyDown","onMouseEnter","StyledProjects","StyledProjectList","StyledProjectCard","data","useStaticQuery","activeTabId","setActiveTabId","projectListArray","allMdx","nodes","frontmatter","projectList","projectCard","getImage","repo","rel","technologies","body","G","StyledContact","Head","content","property"],"sourceRoot":""}